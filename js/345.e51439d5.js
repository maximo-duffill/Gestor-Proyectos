"use strict";(self["webpackChunkgestion_proyectos"]=self["webpackChunkgestion_proyectos"]||[]).push([[345],{345:function(t,e,o){o.r(e),o.d(e,{default:function(){return E}});var s=o(252),i=o(577);const r=t=>((0,s.dD)("data-v-9e95eb7c"),t=t(),(0,s.Cn)(),t),a={class:"header"},l={class:"header-buttons"},d={key:0,class:"user-info"},c={class:"user-info-text"},n=r((()=>(0,s._)("h1",null,"Project Management",-1))),u={class:"container"},p={class:"project-details"},h={key:0},k=r((()=>(0,s._)("h2",null,"Tasks for Project",-1))),g={class:"task-container"},m=r((()=>(0,s._)("strong",null,"Task ID:",-1))),j=r((()=>(0,s._)("strong",null,"Description:",-1))),_=r((()=>(0,s._)("strong",null,"Assigned to:",-1))),f=r((()=>(0,s._)("strong",null,"Status:",-1))),F=r((()=>(0,s._)("hr",null,null,-1))),y={key:1},w=r((()=>(0,s._)("p",null,"No tasks found for this project.",-1))),T=[w],D={class:"dialog-footer"};function v(t,e,o,r,w,v){const V=(0,s.up)("router-link"),b=(0,s.up)("el-button"),P=(0,s.up)("el-input"),U=(0,s.up)("el-form-item"),C=(0,s.up)("el-form"),E=(0,s.up)("el-dialog");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s._)("header",a,[(0,s._)("div",l,[(0,s.Wm)(V,{to:"/",class:"brand"},{default:(0,s.w5)((()=>[(0,s.Uk)("OrganizeHub")])),_:1}),t.loggedInUser?((0,s.wg)(),(0,s.iD)("div",d,[(0,s._)("div",c,"Logged in as "+(0,i.zw)(t.loggedInUser.email),1),(0,s.Wm)(b,{type:"primary",onClick:v.logout},{default:(0,s.w5)((()=>[(0,s.Uk)("Logout")])),_:1},8,["onClick"])])):(0,s.kq)("",!0)]),n]),(0,s._)("div",u,[(0,s._)("div",p,[w.tasksForProject.length>0?((0,s.wg)(),(0,s.iD)("div",h,[k,(0,s._)("div",g,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(w.tasksForProject,(t=>((0,s.wg)(),(0,s.iD)("div",{key:t.task_id,class:"task-item"},[(0,s._)("div",null,[m,(0,s.Uk)(" "+(0,i.zw)(t.task_id),1)]),(0,s._)("div",null,[j,(0,s.Uk)(" "+(0,i.zw)(t.description),1)]),(0,s._)("div",null,[_,(0,s.Uk)(" "+(0,i.zw)(t.assigned_to),1)]),(0,s._)("div",null,[f,(0,s.Uk)(" "+(0,i.zw)(t.status),1)]),(0,s.Wm)(b,{type:"primary",onClick:e=>v.openEditDialog("task",t)},{default:(0,s.w5)((()=>[(0,s.Uk)("Edit Task")])),_:2},1032,["onClick"]),F])))),128))])])):((0,s.wg)(),(0,s.iD)("div",y,T))]),(0,s.Wm)(E,{modelValue:w.dialogVisible,"onUpdate:modelValue":e[4]||(e[4]=t=>w.dialogVisible=t),title:"project"===w.dialogType?"Edit Project Detail":"Edit Task Detail",width:"30%",onClose:v.resetDialog,class:"edit-dialog"},{default:(0,s.w5)((()=>[(0,s.Wm)(C,{ref:"editForm",model:w.editForm,"label-width":"120px"},{default:(0,s.w5)((()=>["project"===w.dialogType?((0,s.wg)(),(0,s.j4)(U,{key:0,label:"Project ID:"},{default:(0,s.w5)((()=>[(0,s.Wm)(P,{modelValue:w.editForm.project_id,"onUpdate:modelValue":e[0]||(e[0]=t=>w.editForm.project_id=t),disabled:""},null,8,["modelValue"])])),_:1})):(0,s.kq)("",!0),"project"===w.dialogType||"task"===w.dialogType?((0,s.wg)(),(0,s.j4)(U,{key:1,label:"Assigned to:"},{default:(0,s.w5)((()=>[(0,s.Wm)(P,{modelValue:w.editForm.assigned_to,"onUpdate:modelValue":e[1]||(e[1]=t=>w.editForm.assigned_to=t)},null,8,["modelValue"])])),_:1})):(0,s.kq)("",!0),"project"===w.dialogType||"task"===w.dialogType?((0,s.wg)(),(0,s.j4)(U,{key:2,label:"Description:"},{default:(0,s.w5)((()=>[(0,s.Wm)(P,{modelValue:w.editForm.description,"onUpdate:modelValue":e[2]||(e[2]=t=>w.editForm.description=t)},null,8,["modelValue"])])),_:1})):(0,s.kq)("",!0),"project"===w.dialogType||"task"===w.dialogType?((0,s.wg)(),(0,s.j4)(U,{key:3,label:"Status:"},{default:(0,s.w5)((()=>[(0,s.Wm)(P,{modelValue:w.editForm.status,"onUpdate:modelValue":e[3]||(e[3]=t=>w.editForm.status=t)},null,8,["modelValue"])])),_:1})):(0,s.kq)("",!0)])),_:1},8,["model"]),(0,s._)("span",D,[(0,s.Wm)(b,{onClick:v.resetDialog},{default:(0,s.w5)((()=>[(0,s.Uk)("Cancel")])),_:1},8,["onClick"]),(0,s.Wm)(b,{type:"primary",onClick:v.saveEdit},{default:(0,s.w5)((()=>[(0,s.Uk)("Save")])),_:1},8,["onClick"])])])),_:1},8,["modelValue","title","onClose"])])])}var V=o(121),b=o(907),P={computed:{...(0,b.Se)(["loggedInUser"])},data(){return{project:{},tasks:[],tasksForProject:[],dialogVisible:!1,dialogType:"",currentTask:null,editForm:{project_id:"",assigned_to:"",description:"",status:""}}},created(){const t=JSON.parse(localStorage.getItem("user"));t?this.$store.commit("setUser",t):this.$router.push("/"),this.fetchProjectDetails(),this.fetchTasksForProject()},watch:{"$route.query.project_id":function(t,e){t!==e&&(this.fetchProjectDetails(),this.fetchTasksForProject())}},methods:{async fetchProjectDetails(){const t=this.$route.query.project_id;if(t)try{const e=await V.Z.get(`http://localhost:3000/projects/${t}`);e.data.success?(this.project=e.data.project,this.updateEditForm()):console.error("Failed to fetch project details.")}catch(e){console.error("Error fetching project details:",e)}else console.error("No project ID found in route query parameters.")},async fetchTasksForProject(){const t=this.$route.query.project_id;if(t)try{const e=await V.Z.get(`http://localhost:3000/tasks?project_id=${t}`);e.data.success?(this.tasks=e.data.tasks,console.log("Fetched tasks:",this.tasks),this.filterTasksForProject()):console.error("Failed to fetch tasks for the project.")}catch(e){console.error("Error fetching tasks for the project:",e)}else console.error("No project ID found in route query parameters.")},filterTasksForProject(){const t=this.$route.query.project_id,e=t.toString();console.log("Current projectId:",e),console.log("All tasks:",this.tasks),this.tasksForProject=this.tasks.filter((t=>{const o=t.project_id.toString();return console.log(`Comparing task project_id: ${o} with route project_id: ${e}`),o===e})),console.log("Filtered tasks for project:",this.tasksForProject)},updateEditForm(){this.editForm.project_id=this.project.project_id,this.editForm.assigned_to=this.project.assigned_to,this.editForm.description=this.project.description,this.editForm.status=this.project.status},openEditDialog(t,e=null){this.dialogType=t,"project"===t?this.updateEditForm():"task"===t&&e&&(this.currentTask=e,this.editForm={...e}),this.dialogVisible=!0},resetDialog(){this.dialogVisible=!1,this.dialogType="",this.currentTask=null,this.updateEditForm()},async saveEdit(){try{if("project"===this.dialogType){const t=await V.Z.put(`http://localhost:3000/projects/${this.project.project_id}`,{project_id:this.editForm.project_id,assigned_to:this.editForm.assigned_to,description:this.editForm.description,status:this.editForm.status});t.data.success?(this.project=t.data.project,this.resetDialog()):console.error("Failed to update project detail.")}else if("task"===this.dialogType&&this.currentTask){const t=await V.Z.put(`http://localhost:3000/tasks/${this.currentTask.task_id}`,{project_id:this.editForm.project_id,description:this.editForm.description,assigned_to:this.editForm.assigned_to,status:this.editForm.status});if(t.data.success){const t=this.tasksForProject.findIndex((t=>t.task_id===this.currentTask.task_id));-1!==t&&(this.tasksForProject[t]={...this.editForm}),this.resetDialog()}else console.error("Failed to update task detail.")}}catch(t){console.error("Error updating detail:",t)}},logout(){}}},U=o(744);const C=(0,U.Z)(P,[["render",v],["__scopeId","data-v-9e95eb7c"]]);var E=C}}]);
//# sourceMappingURL=345.e51439d5.js.map