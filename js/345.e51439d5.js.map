{"version":3,"file":"js/345.e51439d5.js","mappings":"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","sources":["webpack://gestion-proyectos/./src/components/projectDetails/DetailsProject.vue","webpack://gestion-proyectos/./src/components/projectDetails/DetailsProject.vue?9607"],"sourcesContent":["<template>\r\n  <div>\r\n    <header class=\"header\">\r\n      <div class=\"header-buttons\">\r\n        <router-link to=\"/\" class=\"brand\">OrganizeHub</router-link>\r\n        <div class=\"user-info\" v-if=\"loggedInUser\">\r\n          <div class=\"user-info-text\">Logged in as {{ loggedInUser.email }}</div>\r\n          <el-button type=\"primary\" @click=\"logout\">Logout</el-button>\r\n        </div>\r\n      </div>\r\n      <h1>Project Management</h1>\r\n    </header>\r\n\r\n    <div class=\"container\">\r\n      <div class=\"project-details\">\r\n       \r\n        <div v-if=\"tasksForProject.length > 0\">\r\n          <h2>Tasks for Project</h2>\r\n          <div class=\"task-container\">\r\n            <div v-for=\"task in tasksForProject\" :key=\"task.task_id\" class=\"task-item\">\r\n              <div><strong>Task ID:</strong> {{ task.task_id }}</div>\r\n              <div><strong>Description:</strong> {{ task.description }}</div>\r\n              <div><strong>Assigned to:</strong> {{ task.assigned_to }}</div>\r\n              <div><strong>Status:</strong> {{ task.status }}</div>\r\n              <el-button type=\"primary\" @click=\"openEditDialog('task', task)\">Edit Task</el-button>\r\n              <hr>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <p>No tasks found for this project.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <el-dialog\r\n        v-model=\"dialogVisible\"\r\n        :title=\"dialogType === 'project' ? 'Edit Project Detail' : 'Edit Task Detail'\"\r\n        width=\"30%\"\r\n        @close=\"resetDialog\"\r\n        class=\"edit-dialog\"\r\n      >\r\n        <el-form ref=\"editForm\" :model=\"editForm\" label-width=\"120px\">\r\n          <el-form-item label=\"Project ID:\" v-if=\"dialogType === 'project'\">\r\n            <el-input v-model=\"editForm.project_id\" disabled></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Assigned to:\" v-if=\"dialogType === 'project' || dialogType === 'task'\">\r\n            <el-input v-model=\"editForm.assigned_to\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Description:\" v-if=\"dialogType === 'project' || dialogType === 'task'\">\r\n            <el-input v-model=\"editForm.description\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Status:\" v-if=\"dialogType === 'project' || dialogType === 'task'\">\r\n            <el-input v-model=\"editForm.status\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"resetDialog\">Cancel</el-button>\r\n          <el-button type=\"primary\" @click=\"saveEdit\">Save</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(['loggedInUser']),\r\n  },\r\n  data() {\r\n    return {\r\n      project: {},\r\n      tasks: [],\r\n      tasksForProject: [], // Filtered tasks based on project_id\r\n      dialogVisible: false,\r\n      dialogType: '',\r\n      currentTask: null, // To store the task being edited\r\n      editForm: {\r\n        project_id: '',\r\n        assigned_to: '',\r\n        description: '',\r\n        status: '',\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.$store.commit('setUser', user);\r\n    } else {\r\n      this.$router.push('/');\r\n    }\r\n    this.fetchProjectDetails();\r\n    this.fetchTasksForProject();\r\n  },\r\n  watch: {\r\n    '$route.query.project_id': function(newVal, oldVal) {\r\n      if (newVal !== oldVal) {\r\n        this.fetchProjectDetails();\r\n        this.fetchTasksForProject();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchProjectDetails() {\r\n      const projectId = this.$route.query.project_id;\r\n      \r\n      if (!projectId) {\r\n        console.error('No project ID found in route query parameters.');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/projects/${projectId}`);\r\n        \r\n        if (response.data.success) {\r\n          this.project = response.data.project;\r\n          this.updateEditForm();\r\n        } else {\r\n          console.error('Failed to fetch project details.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching project details:', error);\r\n      }\r\n    },\r\n    async fetchTasksForProject() {\r\n      const projectId = this.$route.query.project_id;\r\n      if (!projectId) {\r\n        console.error('No project ID found in route query parameters.');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/tasks?project_id=${projectId}`);\r\n        \r\n        if (response.data.success) {\r\n          this.tasks = response.data.tasks;\r\n          console.log('Fetched tasks:', this.tasks); // Log the fetched tasks\r\n          this.filterTasksForProject();\r\n        } else {\r\n          console.error('Failed to fetch tasks for the project.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tasks for the project:', error);\r\n      }\r\n    },\r\n    filterTasksForProject() {\r\n      const projectId = this.$route.query.project_id;\r\n      // Ensure projectId is a string for comparison\r\n      const projectIdStr = projectId.toString();\r\n      console.log('Current projectId:', projectIdStr); // Debugging log\r\n      console.log('All tasks:', this.tasks); // Debugging log\r\n\r\n      this.tasksForProject = this.tasks.filter(task => {\r\n        const taskProjectIdStr = task.project_id.toString();\r\n        console.log(`Comparing task project_id: ${taskProjectIdStr} with route project_id: ${projectIdStr}`); // Debugging log\r\n        return taskProjectIdStr === projectIdStr;\r\n      });\r\n\r\n      console.log('Filtered tasks for project:', this.tasksForProject); // Log the filtered tasks\r\n    },\r\n    updateEditForm() {\r\n      this.editForm.project_id = this.project.project_id;\r\n      this.editForm.assigned_to = this.project.assigned_to;\r\n      this.editForm.description = this.project.description;\r\n      this.editForm.status = this.project.status;\r\n    },\r\n    openEditDialog(type, task = null) {\r\n      this.dialogType = type;\r\n      if (type === 'project') {\r\n        this.updateEditForm();\r\n      } else if (type === 'task' && task) {\r\n        this.currentTask = task;\r\n        this.editForm = { ...task };\r\n      }\r\n      this.dialogVisible = true;\r\n    },\r\n    resetDialog() {\r\n      this.dialogVisible = false;\r\n      this.dialogType = '';\r\n      this.currentTask = null;\r\n      this.updateEditForm();\r\n    },\r\n    async saveEdit() {\r\n    try {\r\n      if (this.dialogType === 'project') {\r\n        const response = await axios.put(`http://localhost:3000/projects/${this.project.project_id}`, {\r\n          project_id: this.editForm.project_id,\r\n          assigned_to: this.editForm.assigned_to,\r\n          description: this.editForm.description,\r\n          status: this.editForm.status,\r\n        });\r\n        if (response.data.success) {\r\n          this.project = response.data.project;\r\n          this.resetDialog();\r\n        } else {\r\n          console.error('Failed to update project detail.');\r\n        }\r\n      } else if (this.dialogType === 'task' && this.currentTask) {\r\n        const response = await axios.put(`http://localhost:3000/tasks/${this.currentTask.task_id}`, {\r\n          project_id: this.editForm.project_id,\r\n          description: this.editForm.description,\r\n          assigned_to: this.editForm.assigned_to,\r\n          status: this.editForm.status,\r\n        });\r\n        if (response.data.success) {\r\n          const taskIndex = this.tasksForProject.findIndex(task => task.task_id === this.currentTask.task_id);\r\n          if (taskIndex !== -1) {\r\n            this.tasksForProject[taskIndex] = { ...this.editForm };\r\n          }\r\n          this.resetDialog();\r\n        } else {\r\n          console.error('Failed to update task detail.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating detail:', error);\r\n    }\r\n  },\r\n    logout() {\r\n      // Implement logout logic\r\n    }\r\n  }\r\n};\r\n</script> \r\n\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n\r\n.header {\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 1rem;\r\n  border-radius: 10px 10px 0 0;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.brand {\r\n  color: #020202;\r\n  font-size: 2rem;\r\n  text-decoration: none;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-info-text {\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: 1px solid #fff;\r\n  border-radius: 8px;\r\n  padding: 5px 10px;\r\n  font-size: 1.2rem;\r\n  margin-right: 10px;\r\n}\r\n\r\n.el-button {\r\n  padding: 0.5rem 1rem;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n}\r\n\r\n.project-details {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.edit-button-container {\r\n  text-align: right;\r\n}\r\n\r\n.task-item {\r\n  margin-bottom: 15px; /* Added space under each task item */\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n}\r\n\r\n.edit-dialog {\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n","import { render } from \"./DetailsProject.vue?vue&type=template&id=9e95eb7c&scoped=true\"\nimport script from \"./DetailsProject.vue?vue&type=script&lang=js\"\nexport * from \"./DetailsProject.vue?vue&type=script&lang=js\"\n\nimport \"./DetailsProject.vue?vue&type=style&index=0&id=9e95eb7c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9e95eb7c\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_17","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","_ctx","loggedInUser","_hoisted_3","_hoisted_4","_toDisplayString","email","_component_el_button","type","onClick","$options","logout","_hoisted_5","_hoisted_6","_hoisted_7","$data","tasksForProject","length","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","task","key","task_id","_hoisted_11","_hoisted_12","description","_hoisted_13","assigned_to","_hoisted_14","status","$event","openEditDialog","_hoisted_15","_hoisted_16","_hoisted_18","_component_el_dialog","dialogVisible","title","dialogType","width","onClose","resetDialog","_component_el_form","ref","model","editForm","_createBlock","_component_el_form_item","label","_component_el_input","project_id","disabled","_hoisted_19","saveEdit","computed","mapGetters","data","project","tasks","currentTask","created","user","JSON","parse","localStorage","getItem","this","$store","commit","$router","push","fetchProjectDetails","fetchTasksForProject","watch","newVal","oldVal","methods","projectId","$route","query","response","axios","get","success","updateEditForm","console","error","log","filterTasksForProject","projectIdStr","toString","filter","taskProjectIdStr","put","taskIndex","findIndex","__exports__","render"],"sourceRoot":""}