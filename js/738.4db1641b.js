"use strict";(self["webpackChunkgestion_proyectos"]=self["webpackChunkgestion_proyectos"]||[]).push([[738],{738:function(e,l,t){t.r(l),t.d(l,{default:function(){return h}});var s=t(252);const r=e=>((0,s.dD)("data-v-ebd6b59c"),e=e(),(0,s.Cn)(),e),o={class:"users-page"},i={class:"header"},a={class:"buttons"},d={class:"user-list"},u=r((()=>(0,s._)("h2",null,"User List",-1))),m={class:"dialog-footer"};function n(e,l,t,r,n,c){const p=(0,s.up)("router-link"),U=(0,s.up)("el-button"),b=(0,s.up)("el-table-column"),h=(0,s.up)("el-table"),f=(0,s.up)("el-input"),_=(0,s.up)("el-form-item"),w=(0,s.up)("el-switch"),g=(0,s.up)("el-form"),W=(0,s.up)("el-dialog");return(0,s.wg)(),(0,s.iD)("div",o,[(0,s._)("header",i,[(0,s.Wm)(p,{to:"/",class:"brand"},{default:(0,s.w5)((()=>[(0,s.Uk)("OrganizeHub")])),_:1}),(0,s._)("div",a,[(0,s.Wm)(p,{to:"/dashboard",class:"dashboard-button"},{default:(0,s.w5)((()=>[(0,s.Wm)(U,{type:"primary",round:"",size:"large"},{default:(0,s.w5)((()=>[(0,s.Uk)("Dashboard")])),_:1})])),_:1}),(0,s.Wm)(p,{to:"/users",class:"admin-button"},{default:(0,s.w5)((()=>[(0,s.Wm)(U,{type:"primary",round:"",size:"large"},{default:(0,s.w5)((()=>[(0,s.Uk)("Users")])),_:1})])),_:1}),(0,s.Wm)(U,{onClick:c.logout,type:"primary",round:"",size:"large"},{default:(0,s.w5)((()=>[(0,s.Uk)("Logout")])),_:1},8,["onClick"])])]),(0,s._)("main",d,[u,(0,s.Wm)(h,{data:n.users,style:{width:"100%"}},{default:(0,s.w5)((()=>[(0,s.Wm)(b,{prop:"user_id",label:"ID",width:"80"}),(0,s.Wm)(b,{prop:"nombre",label:"Name"}),(0,s.Wm)(b,{prop:"email",label:"Email"}),(0,s.Wm)(b,{prop:"role",label:"Role"}),(0,s.Wm)(b,{prop:"active",label:"Active"}),(0,s.Wm)(b,{label:"Actions",width:"180"},{default:(0,s.w5)((e=>[(0,s.Wm)(U,{onClick:l=>c.editUser(e.row),type:"text",icon:"el-icon-edit"},{default:(0,s.w5)((()=>[(0,s.Uk)("Edit")])),_:2},1032,["onClick"]),(0,s.Wm)(U,{onClick:l=>c.deleteUser(e.row.user_id),type:"text",icon:"el-icon-delete"},{default:(0,s.w5)((()=>[(0,s.Uk)("Delete")])),_:2},1032,["onClick"])])),_:1})])),_:1},8,["data"])]),(0,s.Wm)(W,{modelValue:n.editUserDialogVisible,"onUpdate:modelValue":l[5]||(l[5]=e=>n.editUserDialogVisible=e),title:"Edit User",width:"30%","before-close":e.closeEditUserDialog},{default:(0,s.w5)((()=>[(0,s.Wm)(g,{ref:"editForm",model:n.editUserForm,"label-width":"120px"},{default:(0,s.w5)((()=>[(0,s.Wm)(_,{label:"ID"},{default:(0,s.w5)((()=>[(0,s.Wm)(f,{modelValue:n.editUserForm.user_id,"onUpdate:modelValue":l[0]||(l[0]=e=>n.editUserForm.user_id=e),disabled:""},null,8,["modelValue"])])),_:1}),(0,s.Wm)(_,{label:"Name"},{default:(0,s.w5)((()=>[(0,s.Wm)(f,{modelValue:n.editUserForm.nombre,"onUpdate:modelValue":l[1]||(l[1]=e=>n.editUserForm.nombre=e)},null,8,["modelValue"])])),_:1}),(0,s.Wm)(_,{label:"Email"},{default:(0,s.w5)((()=>[(0,s.Wm)(f,{modelValue:n.editUserForm.email,"onUpdate:modelValue":l[2]||(l[2]=e=>n.editUserForm.email=e)},null,8,["modelValue"])])),_:1}),(0,s.Wm)(_,{label:"Role"},{default:(0,s.w5)((()=>[(0,s.Wm)(f,{modelValue:n.editUserForm.role,"onUpdate:modelValue":l[3]||(l[3]=e=>n.editUserForm.role=e)},null,8,["modelValue"])])),_:1}),(0,s.Wm)(_,{label:"Active"},{default:(0,s.w5)((()=>[(0,s.Wm)(w,{modelValue:n.editUserForm.active,"onUpdate:modelValue":l[4]||(l[4]=e=>n.editUserForm.active=e),"active-color":"#13ce66","inactive-color":"#ff4949"},null,8,["modelValue"])])),_:1})])),_:1},8,["model"]),(0,s._)("span",m,[(0,s.Wm)(U,{onClick:e.closeEditUserDialog},{default:(0,s.w5)((()=>[(0,s.Uk)("Cancel")])),_:1},8,["onClick"]),(0,s.Wm)(U,{type:"primary",onClick:c.saveEditedUser},{default:(0,s.w5)((()=>[(0,s.Uk)("Save")])),_:1},8,["onClick"])])])),_:1},8,["modelValue","before-close"])])}var c=t(121),p={data(){return{users:[],editUserDialogVisible:!1,editUserForm:{user_id:"",nombre:"",email:"",role:"",active:!1}}},methods:{logout(){this.$store.commit("clearUser"),this.$router.push("/")},fetchUsers(){c.Z.get("/users").then((e=>{this.users=e.data.users})).catch((e=>{console.error("Error fetching users",e)}))},editUser(e){this.editUserForm.user_id=e.user_id,this.editUserForm.nombre=e.nombre,this.editUserForm.email=e.email,this.editUserForm.active=e.active,this.editUserForm.role=e.role,this.editUserDialogVisible=!0},async saveEditedUser(){try{const{user_id:e,...l}=this.editUserForm;console.log("Updating user with ID:",e);const t=await c.Z.put(`http://localhost:3000/users/${e}`,l),s=t.data.user,r=this.users.findIndex((e=>e.user_id===s.user_id));-1!==r&&this.users.splice(r,1,s),this.editUserDialogVisible=!1,this.$message.success("User updated successfully.")}catch(e){console.error("Error updating user",e),this.$message.error("Failed to update user.")}},deleteUser(e){console.log("Deleting user with ID:",e)}},created(){this.fetchUsers()}},U=t(744);const b=(0,U.Z)(p,[["render",n],["__scopeId","data-v-ebd6b59c"]]);var h=b}}]);
//# sourceMappingURL=738.4db1641b.js.map